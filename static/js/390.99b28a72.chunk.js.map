{"version":3,"file":"static/js/390.99b28a72.chunk.js","mappings":"yNA6CA,UAzCa,WACX,OAAwBA,EAAAA,EAAAA,UAAS,MAAjC,eAAOC,EAAP,KAAaC,EAAb,KACQC,GAAYC,EAAAA,EAAAA,MAAZD,QAgBR,OAdAE,EAAAA,EAAAA,YAAU,WACR,IAAMC,EAAc,mCAAG,8GAEIC,EAAAA,EAAAA,IAAaJ,GAFjB,OAEbK,EAFa,OAInBN,EAAQM,GAJW,gDAMnBC,QAAQC,MAAR,MANmB,yDAAH,qDAUpBJ,GACD,GAAE,CAACH,KAGF,0BACE,wBACGF,EACCA,EAAKU,KAAI,YAA4C,IAAzCC,EAAwC,EAAxCA,GAAIC,EAAoC,EAApCA,KAAMC,EAA8B,EAA9BA,UAAWC,EAAmB,EAAnBA,aAC/B,OACE,2BACE,gBACEC,IAAG,0CAAqCD,GACxCE,IAAKJ,KAEP,wBAAKA,KACL,0CAAoBC,OANbF,EASZ,KAED,yEAKT,C,+LCzCDM,EAAAA,EAAAA,SAAAA,QAAyB,+BACzB,IAAMC,EAAU,mCAGHC,EAAiB,mCAAG,sGACTF,EAAAA,EAAAA,IAAA,sCAAyCC,IADhC,uBACvBE,EADuB,EACvBA,KADuB,kBAEtBA,EAAKC,SAFiB,2CAAH,qDAKjBC,EAAe,mCAAG,WAAOC,GAAP,yFACPN,EAAAA,EAAAA,IAAA,gCAAmCC,EAAnC,kBAAoDK,IAD7C,uBACrBH,EADqB,EACrBA,KADqB,kBAEvBA,EAAKC,SAFkB,2CAAH,sDAKfG,EAAe,mCAAG,WAAOC,GAAP,yFACPR,EAAAA,EAAAA,IAAA,iBAAoBQ,EAApB,mCAAuDP,IADhD,uBACrBE,EADqB,EACrBA,KADqB,kBAEvBA,GAFuB,2CAAH,sDAKfd,EAAY,mCAAG,WAAOmB,GAAP,yFACJR,EAAAA,EAAAA,IAAA,iBAAoBQ,EAApB,4BAAgDP,IAD5C,uBAClBE,EADkB,EAClBA,KADkB,kBAEpBA,EAAKpB,MAFe,2CAAH,sDAKZ0B,EAAe,mCAAG,WAAOD,GAAP,yFACPR,EAAAA,EAAAA,IAAA,iBAAoBQ,EAApB,2CAA+DP,IADxD,uBACrBE,EADqB,EACrBA,KADqB,kBAEvBA,EAAKC,SAFkB,2CAAH,qD","sources":["components/cast/Cast.jsx","services/TmdbAPI.js"],"sourcesContent":["import { useEffect, useState } from 'react';\nimport { useParams } from 'react-router-dom';\nimport { getMovieCast } from 'services/TmdbAPI';\n\nconst Cast = () => {\n  const [cast, setCast] = useState(null);\n  const { movieId } = useParams();\n\n  useEffect(() => {\n    const fetchMovieCast = async () => {\n      try {\n        const response = await getMovieCast(movieId);\n\n        setCast(response);\n      } catch (error) {\n        console.error(error);\n      }\n    };\n\n    fetchMovieCast();\n  }, [movieId]);\n\n  return (\n    <div>\n      <ul>\n        {cast ? (\n          cast.map(({ id, name, character, profile_path }) => {\n            return (\n              <li key={id}>\n                <img\n                  src={`https://image.tmdb.org/t/p/w200/${profile_path}`}\n                  alt={name}\n                />\n                <h4>{name}</h4>\n                <p>Character:&nbsp;{character}</p>\n              </li>\n            );\n          })\n        ) : (\n          <p>We don't have any information about actors</p>\n        )}\n      </ul>\n    </div>\n  );\n};\nexport default Cast;\n","import axios from \"axios\";\n\n\naxios.defaults.baseURL = 'https://api.themoviedb.org/3';\nconst API_KEY = '1bb674914a73bcdd70cc8fd8d868be33';\n\n\nexport const getTrendingMovies = async () => {\n   const {data} = await axios.get(`/trending/movie/day?api_key=${API_KEY}`);\n    return data.results; \n};\n\nexport const getSearchMovies = async (searchQuery) => {\n   const {data} = await axios.get(`/search/movie?api_key=${API_KEY}&query=${searchQuery}`);\n return data.results;\n};\n\nexport const getMovieDetails = async (movie_id) => {\n   const {data} = await axios.get(`/movie/${movie_id}?language=en-US&api_key=${API_KEY}`);\n return data;\n};\n\nexport const getMovieCast = async (movie_id) => {\n   const {data} = await axios.get(`/movie/${movie_id}/credits?api_key=${API_KEY}`);\n return data.cast;\n};\n\nexport const getMovieReviews = async (movie_id) => {\n   const {data} = await axios.get(`/movie/${movie_id}/reviews?language=en-US&api_key=${API_KEY}`);\n return data.results;\n};"],"names":["useState","cast","setCast","movieId","useParams","useEffect","fetchMovieCast","getMovieCast","response","console","error","map","id","name","character","profile_path","src","alt","axios","API_KEY","getTrendingMovies","data","results","getSearchMovies","searchQuery","getMovieDetails","movie_id","getMovieReviews"],"sourceRoot":""}